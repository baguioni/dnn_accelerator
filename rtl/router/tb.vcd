$date
	Sat Oct 19 03:47:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_memory_top $end
$var wire 1 ! finished $end
$var wire 72 " dataOut [71:0] $end
$var parameter 32 # AddrWidth $end
$var parameter 32 $ DataWidth $end
$var parameter 32 % Depth $end
$var parameter 32 & MaxWidth $end
$var reg 1 ' clk $end
$var reg 8 ( dataIn [7:0] $end
$var reg 7 ) finalAddr [6:0] $end
$var reg 16 * readData [15:0] $end
$var reg 1 + routeEn $end
$var reg 1 , rst $end
$var reg 7 - startAddr [6:0] $end
$var reg 7 . writeAddr [6:0] $end
$var reg 1 / writeEn $end
$var integer 32 0 file [31:0] $end
$var integer 32 1 i [31:0] $end
$var integer 32 2 status [31:0] $end
$scope module memory_top_inst $end
$var wire 1 ' clk $end
$var wire 8 3 dataIn [7:0] $end
$var wire 7 4 finalAddr [6:0] $end
$var wire 1 + routeEn $end
$var wire 1 , rst $end
$var wire 7 5 startAddr [6:0] $end
$var wire 7 6 writeAddr [6:0] $end
$var wire 1 / writeEn $end
$var wire 1 7 routingOutput $end
$var wire 1 8 readEn $end
$var wire 7 9 readAddr [6:0] $end
$var wire 1 ! finished $end
$var wire 72 : dataOut [71:0] $end
$var wire 8 ; bufferOut [7:0] $end
$var parameter 32 < AddrWidth $end
$var parameter 32 = DataWidth $end
$var parameter 32 > Depth $end
$var parameter 32 ? MaxWidth $end
$var parameter 7 @ inputSize $end
$var parameter 7 A kernelSize $end
$scope module buffer_inst $end
$var wire 1 ' clk $end
$var wire 8 B dataIn [7:0] $end
$var wire 8 C dataOut [7:0] $end
$var wire 7 D writeAddr [6:0] $end
$var wire 1 / writeEn $end
$var wire 1 8 readEn $end
$var wire 7 E readAddr [6:0] $end
$var parameter 32 F AddrWidth $end
$var parameter 32 G DataWidth $end
$var parameter 32 H Depth $end
$var reg 8 I tempDataOut [7:0] $end
$upscope $end
$scope module router_inst $end
$var wire 1 ' clk $end
$var wire 8 J dataIn [7:0] $end
$var wire 7 K finalAddr [6:0] $end
$var wire 7 L inputSize [6:0] $end
$var wire 7 M kernelSize [6:0] $end
$var wire 1 + routeEn $end
$var wire 1 , rst $end
$var wire 7 N startAddr [6:0] $end
$var parameter 32 O AddrWidth $end
$var parameter 32 P DataWidth $end
$var parameter 32 Q Depth $end
$var parameter 2 R IDLE $end
$var parameter 2 S INITIALIZE $end
$var parameter 32 T MaxWidth $end
$var parameter 2 U PROCESS $end
$var parameter 2 V ROUTE $end
$var parameter 32 W TempAddrWidth $end
$var reg 8 X dataInTemp [7:0] $end
$var reg 72 Y dataOut [71:0] $end
$var reg 1 Z doneRouting $end
$var reg 1 ! finished $end
$var reg 4 [ indexCounter [3:0] $end
$var reg 7 \ kIC [6:0] $end
$var reg 7 ] kOC [6:0] $end
$var reg 7 ^ oLC [6:0] $end
$var reg 7 _ oWC [6:0] $end
$var reg 7 ` outputSize [6:0] $end
$var reg 7 a readAddr [6:0] $end
$var reg 1 8 readEn $end
$var reg 1 7 routingOutput $end
$var reg 7 b startAddrReg [6:0] $end
$var reg 3 c state [2:0] $end
$var reg 1 d validAddr $end
$var integer 32 e i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 W
b11 V
b10 U
b1001 T
b1 S
b0 R
b10000000 Q
b1000 P
b111 O
b10000000 H
b1000 G
b111 F
b11 A
b100 @
b1001 ?
b10000000 >
b1000 =
b111 <
b1001 &
b10000000 %
b1000 $
b111 #
$end
#0
$dumpvars
bx e
xd
b0 c
bx b
b0 a
bx `
bx _
bx ^
bx ]
bx \
b0 [
0Z
b0 Y
b0 X
b0 N
b11 M
b100 L
b0 K
bx J
bx I
b0 E
b0 D
bx C
b0 B
bx ;
b0 :
b0 9
08
07
b0 6
b0 5
b0 4
b0 3
bx 2
bx 1
bx 0
0/
b0 .
b0 -
1,
0+
bx *
b0 )
b0 (
0'
b0 "
0!
$end
#5
1'
#10
0'
b1 (
b1 3
b1 B
1/
b1 2
b1 *
b0 1
b10000000000000000000000000000011 0
0,
#15
1'
#20
0'
b10 (
b10 3
b10 B
b1 .
b1 6
b1 D
b10 *
b1 1
#25
1'
#30
0'
b11 (
b11 3
b11 B
b10 .
b10 6
b10 D
b11 *
b10 1
#35
1'
#40
0'
b100 (
b100 3
b100 B
b11 .
b11 6
b11 D
b100 *
b11 1
#45
1'
#50
0'
b101 (
b101 3
b101 B
b100 .
b100 6
b100 D
b101 *
b100 1
#55
1'
#60
0'
b110 (
b110 3
b110 B
b101 .
b101 6
b101 D
b110 *
b101 1
#65
1'
#70
0'
b111 (
b111 3
b111 B
b110 .
b110 6
b110 D
b111 *
b110 1
#75
1'
#80
0'
b1000 (
b1000 3
b1000 B
b111 .
b111 6
b111 D
b1000 *
b111 1
#85
1'
#90
0'
b1001 (
b1001 3
b1001 B
b1000 .
b1000 6
b1000 D
b1001 *
b1000 1
#95
1'
#100
0'
b1010 (
b1010 3
b1010 B
b1001 .
b1001 6
b1001 D
b1010 *
b1001 1
#105
1'
#110
0'
b1011 (
b1011 3
b1011 B
b1010 .
b1010 6
b1010 D
b1011 *
b1010 1
#115
1'
#120
0'
b1100 (
b1100 3
b1100 B
b1011 .
b1011 6
b1011 D
b1100 *
b1011 1
#125
1'
#130
0'
b1101 (
b1101 3
b1101 B
b1100 .
b1100 6
b1100 D
b1101 *
b1100 1
#135
1'
#140
0'
b1110 (
b1110 3
b1110 B
b1101 .
b1101 6
b1101 D
b1110 *
b1101 1
#145
1'
#150
0'
b1111 (
b1111 3
b1111 B
b1110 .
b1110 6
b1110 D
b1111 *
b1110 1
#155
1'
#160
0'
b10000 (
b10000 3
b10000 B
b1111 .
b1111 6
b1111 D
b10000 *
b1111 1
#165
1'
#170
0'
0/
b10000 )
b10000 4
b10000 K
b10000 1
#175
1'
#180
0'
1+
#185
b1 c
1'
#190
0'
#195
b10 c
b10 `
b0 ]
b1 \
b0 ^
b0 _
0d
18
b0 b
1'
#200
0'
#205
b1 ;
b1 C
b1 J
b1 I
1d
b10 \
b1 9
b1 E
b1 a
1'
#210
0'
#215
b10 ;
b10 C
b10 J
b10 I
b1 [
b1 ]
b0 \
b10 9
b10 E
b10 a
1'
#220
0'
#225
b11 ;
b11 C
b11 J
b11 I
b10 [
b1 \
b100 9
b100 E
b100 a
1'
#230
0'
#235
b101 ;
b101 C
b101 J
b101 I
b11 [
b10 \
b101 9
b101 E
b101 a
1'
#240
0'
#245
b110 ;
b110 C
b110 J
b110 I
b100 [
b10 ]
b0 \
b110 9
b110 E
b110 a
1'
#250
0'
#255
b111 ;
b111 C
b111 J
b111 I
b101 [
b1 \
b1000 9
b1000 E
b1000 a
1'
#260
0'
#265
b1001 ;
b1001 C
b1001 J
b1001 I
b110 [
b10 \
b1001 9
b1001 E
b1001 a
1'
#270
0'
#275
b1010 ;
b1010 C
b1010 J
b1010 I
b111 [
b1 ^
b0 ]
b0 \
b1010 9
b1010 E
b1010 a
1'
#280
0'
#285
b1011 ;
b1011 C
b1011 J
b1011 I
b1000 [
b1 \
b1 9
b1 E
b1 a
1'
#290
0'
#295
b10 ;
b10 C
b10 J
b10 I
b1001 [
b10 \
b10 9
b10 E
b10 a
1'
#300
0'
#305
b11 ;
b11 C
b11 J
b11 I
b11 c
b0 [
b10 X
1'
#310
0'
#315
b10 c
17
b10110000101000001001000001110000011000000101000000110000001000000001 "
b10110000101000001001000001110000011000000101000000110000001000000001 :
b10110000101000001001000001110000011000000101000000110000001000000001 Y
b1001 e
1'
#320
0'
#325
07
b1 [
b1 ]
b0 \
b11 9
b11 E
b11 a
1'
#330
0'
#335
b100 ;
b100 C
b100 J
b100 I
b10 [
b1 \
b101 9
b101 E
b101 a
1'
#340
0'
#345
b110 ;
b110 C
b110 J
b110 I
b11 [
b10 \
b110 9
b110 E
b110 a
1'
#350
0'
#355
b111 ;
b111 C
b111 J
b111 I
b100 [
b10 ]
b0 \
b111 9
b111 E
b111 a
1'
#360
0'
#365
b1000 ;
b1000 C
b1000 J
b1000 I
b101 [
b1 \
b1001 9
b1001 E
b1001 a
1'
#370
0'
#375
b1010 ;
b1010 C
b1010 J
b1010 I
b110 [
b10 \
b1010 9
b1010 E
b1010 a
1'
#380
0'
#385
b1011 ;
b1011 C
b1011 J
b1011 I
b111 [
b1 _
b0 ^
b0 ]
b0 \
b1011 9
b1011 E
b1011 a
1'
#390
0'
#395
b1100 ;
b1100 C
b1100 J
b1100 I
b1000 [
b1 \
b100 9
b100 E
b100 a
1'
#400
0'
#405
b101 ;
b101 C
b101 J
b101 I
b1001 [
b10 \
b101 9
b101 E
b101 a
1'
#410
0'
#415
b110 ;
b110 C
b110 J
b110 I
b11 c
b0 [
b101 X
1'
#420
0'
#425
b10 c
17
b11000000101100001010000010000000011100000110000001000000001100000010 "
b11000000101100001010000010000000011100000110000001000000001100000010 :
b11000000101100001010000010000000011100000110000001000000001100000010 Y
b1001 e
1'
#430
0'
#435
07
b1 [
b1 ]
b0 \
b110 9
b110 E
b110 a
1'
#440
0'
#445
b111 ;
b111 C
b111 J
b111 I
b10 [
b1 \
b1000 9
b1000 E
b1000 a
1'
#450
0'
#455
b1001 ;
b1001 C
b1001 J
b1001 I
b11 [
b10 \
b1001 9
b1001 E
b1001 a
1'
#460
0'
#465
b1010 ;
b1010 C
b1010 J
b1010 I
b100 [
b10 ]
b0 \
b1010 9
b1010 E
b1010 a
1'
#470
0'
#475
b1011 ;
b1011 C
b1011 J
b1011 I
b101 [
b1 \
b1100 9
b1100 E
b1100 a
1'
#480
0'
#485
b1101 ;
b1101 C
b1101 J
b1101 I
b110 [
b10 \
b1101 9
b1101 E
b1101 a
1'
#490
0'
#495
b1110 ;
b1110 C
b1110 J
b1110 I
b111 [
b1 ^
b0 ]
b0 \
b1110 9
b1110 E
b1110 a
1'
#500
0'
#505
b1111 ;
b1111 C
b1111 J
b1111 I
b1000 [
b1 \
b101 9
b101 E
b101 a
1'
#510
0'
#515
b110 ;
b110 C
b110 J
b110 I
b1001 [
b10 \
b110 9
b110 E
b110 a
1'
#520
0'
#525
b111 ;
b111 C
b111 J
b111 I
b11 c
b0 [
b110 X
1'
#530
0'
#535
b10 c
17
b11110000111000001101000010110000101000001001000001110000011000000101 "
b11110000111000001101000010110000101000001001000001110000011000000101 :
b11110000111000001101000010110000101000001001000001110000011000000101 Y
b1001 e
1'
#540
0'
#545
07
b1 [
b1 ]
b0 \
b111 9
b111 E
b111 a
1'
#550
0'
#555
b1000 ;
b1000 C
b1000 J
b1000 I
b10 [
b1 \
b1001 9
b1001 E
b1001 a
1'
#560
0'
#565
b1010 ;
b1010 C
b1010 J
b1010 I
b11 [
b10 \
b1010 9
b1010 E
b1010 a
1'
#570
0'
#575
b1011 ;
b1011 C
b1011 J
b1011 I
b100 [
b10 ]
b0 \
b1011 9
b1011 E
b1011 a
1'
#580
0'
#585
b1100 ;
b1100 C
b1100 J
b1100 I
b101 [
b1 \
b1101 9
b1101 E
b1101 a
1'
#590
0'
#595
b1110 ;
b1110 C
b1110 J
b1110 I
b110 [
b10 \
b1110 9
b1110 E
b1110 a
1'
#600
0'
#605
b1111 ;
b1111 C
b1111 J
b1111 I
b111 [
1Z
b0 ^
b0 ]
b0 \
b1111 9
b1111 E
b1111 a
1'
#610
0'
#615
b10000 ;
b10000 C
b10000 J
b10000 I
b1000 [
b1 \
b100 9
b100 E
b100 a
1'
#620
0'
#625
b101 ;
b101 C
b101 J
b101 I
b1001 [
b10 \
b101 9
b101 E
b101 a
1'
#630
0'
#635
b110 ;
b110 C
b110 J
b110 I
b11 c
b0 [
b101 X
1'
#640
0'
#645
b0 c
1!
08
17
b100000000111100001110000011000000101100001010000010000000011100000110 "
b100000000111100001110000011000000101100001010000010000000011100000110 :
b100000000111100001110000011000000101100001010000010000000011100000110 Y
b1001 e
1'
#650
0'
#655
b1 c
1'
#660
0'
#665
b10 c
b0 X
0Z
b1 \
b0 _
07
0d
18
b0 9
b0 E
b0 a
b0 "
b0 :
b0 Y
0!
1'
